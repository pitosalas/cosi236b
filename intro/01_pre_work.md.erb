---
title: Recommended Pre-Work
section: intro
type: page
---
For those of you (most of you) who don't have experience with Ruby on Rails, here is a list of preparatory work that you ought to do before coming to the first day of class.

This work is not required (after all it is winter break). For those of you who really want to have a running start on day one of the class, this work will be useful. Not required, but highly recommended.

### What you can do before the first class

* **PRIORITY 1: Learn Ruby thoroughly.** Ruby is a very cool language with basic and advanced features. We will have a brief time at the start of the course to get into Ruby but it will really pay off if you get ahead on this.

	Depending on how you best learn there are several approaches to take for learning Ruby. You can of course just use google to find resources and tutorails. Better do use one of these recommended resources, choose one:

	1. Required book: [Programming Ruby](http://www.amazon.com/Programming-Ruby-1-9-2-0-Programmers/dp/1937785491/ref=dp_ob_title_bk)
	1. Free online tutorial: [Try Ruby](http://tryruby.org/levels/1/challenges/0)
	1. Cheap online course: [Codecademy Ruby](http://www.codecademy.com/tracks/ruby)
	1. Free onine tutorial: [Ruby in 100 Minutes](http://tutorials.jumpstartlab.com/projects/ruby_in_100_minutes.html)
	1. Non-free online course: [Ruby Off Rails]([Ruby Off Rails](https://rubyoffrails.com))
<br/>
<br/>
* **PRIORITY 2: Do Programming Assignment 1 (PA1)**. This will both get a major initial homework out of the way but also prove to yourself that you've gotten a good sense of Ruby and how to use it. Here it is: <%= link_to_section "pa", :PA1 %>
<hr/>
* **LOWER: Learn Rails** Rails is basically a large Ruby library to allow you to design and implement sophisticated, professional web applications. Again googling will find you lots of good resources. However I do recommend you follow a somewhat more structured approach. Here are the recommended resources. Choose one:
	1. [Agile Web Development with Rails 4](http://www.amazon.com/Agile-Development-Rails-Facets-Ruby/dp/1937785564). You should actually type in and build the sample app. You will learn a lot!
	1. Code School has a well regarded Rails course. It's quite cheap and may work better for you depending on your learning style. [Rails for Zombies](https://www.codeschool.com/courses/rails-for-zombies-redux)


##### Required Books

* You need to buy these two books. It is up to you if you buy the paper copy or the online version. You will use them a lot.
	1. [Agile Web Development with Rails 4](http://www.amazon.com/Agile-Development-Rails-Facets-Ruby/dp/1937785564)
	1. [Programming Ruby](http://www.amazon.com/Programming-Ruby-1-9-2-0-Programmers/dp/1937785491/ref=dp_ob_title_bk)

##### Resources you will use constantly

* [Stack Overflow](http://stackoverflow.com): You may or may not have heard of Stack Overflow, but have you really used it? Have you looked for answers - probably yes, but have you posted questions? You will be doing both extensively during the course, so you might as well get used to it!
* [Rails Casts](http://railscasts.com) This web site contains hundreds of free screen casts that give step by step explanations on all sorts of use cases of rails. As the series has been going on for years, and has been in suspended animation since this June, you will see videos that talk about old versions of Rails and obsolete techniques. So, your mileage may vary but it's still a great resource.
* [Google](http://google.com) Google is your friend. You know this of course. Almost any technical problem you encounter has been solved and written up by someone. Google it. Ask Mother Google. Ask The Google!
* [Rails Guides](http://guides.rubyonrails.org) Highly readable and concise (yet comprehensive :) guides to the most important parts of Rails. Often better than any book or manual.

##### Other interesting resources
* [Codewars](http://www.codewars.com/?language=ruby) -Ruby programming katas.






