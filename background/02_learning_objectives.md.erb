---
title: Learning Objectives
section: background
type: page
order: 1
---
#### Cosi236b - Software Engineering for IT Entrepreneurs

##### Will understand

* understand the architecture of the internet and the structure of web applications 
	* Have a big picture understanding of what a server is and what a client is
	* Understand layering of protocols and TCP/IP, HTTP and DNS and their role
	* Understand the roles of HTTP, HTML, CSS, DNS, SSL, 
	* data use (local and remote DB, local/remote file systems, music, video)
* understand fundamental Ruby on Rails concepts and be able to use them comfortably
	* Model/View/Controller
	* Persistence architectures
* understand concepts underlying modern software testing, automation and development practices
	* unit testing, debugging, logging, etc.
	* Test driven development
	* Automated test suites
* Live server monitoring and error reporting
	* think critically about user interface and user experience design
	* design principles, paper prototyping, usability testing

##### Will Be Able To

* program at a high level in Ruby
* write rails applications
* to turn those web based applications into mobile applications
* learn how to use tools of the internet to get answers to questions
* learn how to continually acquire new knowledge and skills in your discipline
* make screen recordings of demos
* how to use source code control and git in particular
* finding answers to technical questions using web newsgroups, screencasts, and resources.
* creation of secure login/registration modules for websites

#### Cosi202b - Software Engineering Lab

##### Will Understand

* understand the principles of agile methodology, concepts and reasoning behind them
	* stories
	* backlog
	* iteration/sprint
	* velocity
	* pair programming
	* continual integration
	* constant refactoring/automated testing
* understand the difference between developing a toy program and a real application

##### Will Be Able To

* Write ruby code, rspec tests, design good classes and algorithms, debug that code
* use agile principles for software engineering 
* gather user and usability testing/feedback
* Use GIT, Pivotal Tracker, Android Development Kit, ...
* give clear and engaging oral presentations on the product 
* work in a professional software team: making and meeting commitments, asking and giving help to assure the success of the team, communicating well to each other and to 'management', and delivering on objectives
* be highly resourceful in solving problems by taking advantage of all the resources of the web
* describe and show what it took to select, design, develop, test and deploy a mobile product
build, test and launch an original product using everything you've learned in the course
